--- /usr/src/kernels/6.6.2-amdsos-build56-rhel-9+/arch/x86/include/uapi/asm/amd_hsmp.h  2024-01-03 01:09:01.000000000 -0800
+++ /usr/include/asm/amd_hsmp.h 2024-06-04 12:00:59.131876388 -0700
@@ -47,6 +47,9 @@
        HSMP_SET_PCI_RATE,              /* 20h Control link rate on PCIe devices */
        HSMP_SET_POWER_MODE,            /* 21h Select power efficiency profile policy */
        HSMP_SET_PSTATE_MAX_MIN,        /* 22h Set the max and min DF P-State  */
+HSMP_GET_METRIC_TABLE_VER,      /* 23h Get metrics table version */
+HSMP_GET_METRIC_TABLE,          /* 24h Get metrics table */
+HSMP_GET_METRIC_TABLE_DRAM_ADDR,/* 25h Get metrics table dram address */
        HSMP_MSG_ID_MAX,
 };

@@ -64,6 +67,14 @@
        HSMP_GET  = 1,
 };

+enum hsmp_proto_versions {
+HSMP_PROTO_VER2 = 2,
+HSMP_PROTO_VER3,
+HSMP_PROTO_VER4,
+HSMP_PROTO_VER5,
+HSMP_PROTO_VER6
+};
+
 struct hsmp_msg_desc {
        int num_args;
        int response_sz;
@@ -297,6 +308,86 @@
        {1, 0, HSMP_SET},
 };

+/* Metrics table (supported only with proto version 6) */                                                                                                                                                                    [24/1889]
+struct hsmp_metric_table {
+        __u32 accumulation_counter;
+
+        /* TEMPERATURE */
+        __u32 max_socket_temperature;
+        __u32 max_vr_temperature;
+        __u32 max_hbm_temperature;
+        __u64 max_socket_temperature_acc;
+        __u64 max_vr_temperature_acc;
+        __u64 max_hbm_temperature_acc;
+
+        /* POWER */
+        __u32 socket_power_limit;
+        __u32 max_socket_power_limit;
+        __u32 socket_power;
+
+        /* ENERGY */
+        __u64 timestamp;
+        __u64 socket_energy_acc;
+        __u64 ccd_energy_acc;
+        __u64 xcd_energy_acc;
+        __u64 aid_energy_acc;
+        __u64 hbm_energy_acc;
+
+        /* FREQUENCY */
+        __u32 cclk_frequency_limit;
+        __u32 gfxclk_frequency_limit;
+        __u32 fclk_frequency;
+        __u32 uclk_frequency;
+        __u32 socclk_frequency[4];
+        __u32 vclk_frequency[4];
+        __u32 dclk_frequency[4];
+        __u32 lclk_frequency[4];
+        __u64 gfxclk_frequency_acc[8];
+        __u64 cclk_frequency_acc[96];
+
+        /* FREQUENCY RANGE */
+        __u32 max_cclk_frequency;
+        __u32 min_cclk_frequency;
+        __u32 max_gfxclk_frequency;
+        __u32 min_gfxclk_frequency;
+        __u32 fclk_frequency_table[4];
+        __u32 uclk_frequency_table[4];
+        __u32 socclk_frequency_table[4];
+        __u32 vclk_frequency_table[4];
+        __u32 dclk_frequency_table[4];
+        __u32 lclk_frequency_table[4];
+        __u32 max_lclk_dpm_range;
+        __u32 min_lclk_dpm_range;
+
+        /* XGMI */
+        __u32 xgmi_width;
+        __u32 xgmi_bitrate;
+        __u64 xgmi_read_bandwidth_acc[8];
+        __u64 xgmi_write_bandwidth_acc[8];
+
+        /* ACTIVITY */
+        __u32 socket_c0_residency;
+        __u32 socket_gfx_busy;
+        __u32 dram_bandwidth_utilization;
+        __u64 socket_c0_residency_acc;
+        __u64 socket_gfx_busy_acc;
+        __u64 dram_bandwidth_acc;
+        __u32 max_dram_bandwidth;
+        __u64 dram_bandwidth_utilization_acc;
+        __u64 pcie_bandwidth_acc[4];
+
+        /* THROTTLERS */
+        __u32 prochot_residency_acc;
+        __u32 ppt_residency_acc;
+        __u32 socket_thm_residency_acc;
+        __u32 vr_thm_residency_acc;
+        __u32 hbm_thm_residency_acc;
+        __u32 spare;
+
+        /* New items at the end to maintain driver compatibility */
+        __u32 gfxclk_frequency[8];
+};
+
 /* Reset to default packing */
 #pragma pack()

